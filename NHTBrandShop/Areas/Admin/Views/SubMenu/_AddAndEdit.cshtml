@model NHTBrandShop.Areas.Admin.Models.SubMenuActionModel


@if (Model != null)
{
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">
                @if (Model.SubMenuID > 0)
                {
                    <span> Edit Sub Menu</span>
                }
                else
                {
                    <span> Create Sub Menu</span>
                }
            </h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <form id="actionForm">
                <input type="hidden" name="SubMenuID" value="@Model.SubMenuID" />
                <div class="form-group">
                    <label>Main Menu Name</label>
                    <select class="form-control" name="MainMenuID">
                        <option value="value">--</option>
                        @if (Model.MainMenus != null)
                        {
                            foreach (var mainMenu in Model.MainMenus)
                            {
                                <option value="@mainMenu.MainMenuID" @(mainMenu.MainMenuID == Model.MainMenuID ? "selected" : string.Empty)>
                                    @mainMenu.MainMenuName
                                </option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>Sub Menu Name</label>
                    <input class="form-control" name="SubMenuName" placeholder="Enter Sub Menu Name" value="@Model.SubMenuName" required>
                </div>
                <div class="form-group">
                    <label>Description</label>
                    <textarea class="form-control" name="Description" placeholder="Enter Sub Menu Description">@Model.Description</textarea>
                </div>
                <div class="form-group">
                    <label>Select Pictures</label>
                    <input id="selectImages" type="file" class="form-control" name="Pictures" multiple>
                    <div id="picturesArea">
                        @if (Model.SubMenuPictures != null && Model.SubMenuPictures.Count() > 0)
                        {
                            foreach (var picture in Model.SubMenuPictures)
                            {
                                <img class="img-fluid" src='/images/@picture.Picture.Url' data-id='@picture.PictureID' 
                                     style="width: 210px; height: 160px" onclick="removeMe(this)" />
                            }
                        }

                    </div>
                    <input type="hidden" name="pictureIDs" id="pictureIDs" />
                </div>
            </form>

            <div class="errorDiv text-danger" style="display:none">

            </div>

        </div>
        <div class="modal-footer">
            <button id="actionButton" type="button" class="btn btn-primary"><i class="fa fa-save fa-xs">   Save</i></button>
            <button type="button" class="btn btn-dark" data-dismiss="modal"><i class="fa fa-close fa-xs">   Close</i></button>
        </div>
    </div>

}
<div id="imageTemplate" class="clearfix d-none">
    <img src="" class="img-fluid" style="width: 210px; height: 160px" onclick="removeMe(this)" />
</div>


<script>
    $("#actionForm").validate({
        rules: {
            SubMenuName: {
                required: true,
                maxlength: 50
            }
        },
        messages: {
            SubMenuName: {
                required: "Sub Menu Name is Required",
                maxlength: "Maximum Length Should be 50 Characters"
            }
        },
    });


    $("#actionButton").click(function () {

        if ($("#actionForm").valid()) {
            debugger; 
            var pictureIDs = [];
            $("#picturesArea img").each(function () {
                var picID = $(this).attr("data-id");

                pictureIDs.push(picID);
            });

            $("#pictureIDs").val(pictureIDs.join());
            debugger; 

            $.ajax({
                url: '@Url.Action("AddAndEdit", "SubMenu")',
                type: 'post',
                data: $("#actionForm").serialize(),
            })
                .done(function (response) {
                    if (response.Success) {
                        location.reload();
                    }
                    else {
                        $(".errorDiv").html(response.Message);
                        $(".errorDiv").show();
                    }
                });
        };
    });

    $("#selectImages").change(function() {

        var pictures = this.files;

        var formData = new FormData();

        for (var i = 0; i < pictures.length; i++) {
            formData.append("Pictures", pictures[i]);
        }

        $.ajax({
            url: '@Url.Action("UploadPictures", "Shared")',
            type: 'post',
            data: formData,
            dataType: "json",
            processData: false,
            contentType: false
        })
        .done(function (response) {

            for (var i = 0; i < response.length; i++) {

                var picResponse = response[i];

                var $imgHtml = $("#imageTemplate").clone();

                $imgHtml.find("img").attr("src", "/images/" + picResponse.Url);
                $imgHtml.find("img").attr("data-id", picResponse.PictureID);

                $("#picturesArea").append($imgHtml.html());

            }
        });
    });

    function removeMe(element) {
        element.remove();
    };

</script>

